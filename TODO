Playing field
- more maps, more challenges
- ideas are welcome
- detailed designs and graphics are better
- pull requests for completed code is best!
- Wall following challenges
- GPS challenges
- Cospace type challenge
- Underwater
- Flying drone
- Map configurator

Robot / pybricks
- realism is not the main focus, but where practicable, I would like the simulator to behave at least close to a real robot
- testing and measurements of physical robot parameters
- testing / advice on API behavior, particularly for pybricks.

Documentation
- most blocks are undocumented

Coding (Python editor)
- Documentation panel?

Coding (Robot configurator)
- Help menu
- Name items
- Duplicate items

Coding (Image world)
- Option to set robot rotation in degrees or radian for both single and multi-robots
- Split this into a separate base world
- Document multi-robot position setting

Coding (Simulator)
- Implement Pybricks support (...run, not just generate code)
- More components
  - object of interest radar (direction and range of object)
  - claw
  - linear actuator
  - camera (array of rgb/hsv for image recognition. Is skulpt fast enough? Without numpy?)
  - LED (use ev3dev api or new?)
- Prevent jumping over wall when backing up. (Increasing wall friction doesn't work...)
- Set duty_cycle_sp. Useful for aligning to wall.
- Remote control
- Buttons
- Load zip file
- Touch sensor extendable touch surface

Coding (Sharing)
- Remote coach view of student's work
- Spectator mode. Run code on one computer, but rendered and view on multiple.
- Host an arena match and allow others to submit code/robots

Bugs
- Variables not disappearing from toolbox immediately upon delete